* hola-tact-meet

** Purpose

This is my 3rd attempt to write a software which will help to facilitate and structure my team meetings
in a Holacracy style. While there are some limitations of a typical non-Holacracy teams (e.g. absense of Roles etc) 
I still feel the great potential of performing Holacracy style meetings with facilitation & clear outcome
for my team.

** Planned features

 - Identification & Authorization

   - [ ] Google Auth
   - (maybe) Jira auth

 - Permission levels
   - Admin (can manager allowed domains and setup Oauth screens)
   - Manager (can manage teams)
   - User (can participate in the teams and meetings)

 - Main screen
   - Some explanation what this is and what it does
   - Login button

 - App screen (for logged in users)
   - User:
     - Join existing meeting
     - List past meetings
     - Personal actions - todo list
     - ⚙ user profile settings
       - avatar, username, etc

   - Manager
     - Create/start new meeting
       - Meeting description
       - ☑ Allow vote for topic
       - ☑ Sort topics by votes
       - Join URL (Google Meet, Zoom, etc)
     - Edit past meetings data (todo actions etc)
     - Activate/Deactivate (show/hide) past meetings data

   - Admin
     - ⚙ project settings link

 - Meeting

   - Rounds:
     
     For each round - display the actual documentation at the other half of the screen, explaning roles & actions
     of people involved, to easy the process of onboarding to this new meeting structure.

     - Check-in round
     - Checklist review
     - Metrics review
     - +Project progress updates+ (Projects are not planned for 1st release)

   - Topics (tensions)
     - Add topic to discuss
     - Voting for topic (if enabled)
     - Sorting topics by vote (if enabled)
     - Countdown timer (if enabled and set for topic)
     - Discussion phases: (traige issues)
       - Explanation
       - Questions round
       - Opinions round
       - Objections round
       - Decision round: accept / decline
       - Secretary write down the action items

   - Finalize:
     - Export as:
       - Doc
       - PDF
       - Directly to Confluence via API (if API is enabled)

** Installation
:PROPERTIES:
:CUSTOM_ID: installation
:END:

Download from https://github.com/avkoval/hola-tact-meet

** Usage
:PROPERTIES:
:CUSTOM_ID: usage
:END:
FIXME: explanation

Run the project directly, via =:exec-fn=:

#+begin_example
$ clojure -X:run-x
Hello, Clojure!
#+end_example

Run the project, overriding the name to be greeted:

#+begin_example
$ clojure -X:run-x :name '"Someone"'
Hello, Someone!
#+end_example

Run the project directly, via =:main-opts= (=-m ok.hola-tact-meet=):

#+begin_example
$ clojure -M:run-m
Hello, World!
#+end_example

Run the project, overriding the name to be greeted:

#+begin_example
$ clojure -M:run-m Via-Main
Hello, Via-Main!
#+end_example

Run the project's tests (they'll fail until you edit them):

#+begin_example
$ clojure -T:build test
#+end_example

Run the project's CI pipeline and build an uberjar (this will fail until
you edit the tests to pass):

#+begin_example
$ clojure -T:build ci
#+end_example

Run that uberjar:

#+begin_example
$ java -jar target/hola-tact-meet-0.1.0-SNAPSHOT.jar
#+end_example

** Options
:PROPERTIES:
:CUSTOM_ID: options
:END:
FIXME: listing of options this app accepts.

** Examples
:PROPERTIES:
:CUSTOM_ID: examples
:END:
...

*** Bugs
:PROPERTIES:
:CUSTOM_ID: bugs
:END:
...

*** Any Other Sections
:PROPERTIES:
:CUSTOM_ID: any-other-sections
:END:
*** That You Think
:PROPERTIES:
:CUSTOM_ID: that-you-think
:END:
*** Might be Useful
:PROPERTIES:
:CUSTOM_ID: might-be-useful
:END:
** License
:PROPERTIES:
:CUSTOM_ID: license
:END:
Copyright © 2025 Oleksii

/EPLv1.0 is just the default for projects generated by =clj-new=: you
are not/ /required to open source this project, nor are you required to
use EPLv1.0!/ /Feel free to remove or change the =LICENSE= file and
remove or update this/ /section of the =README.md= file!/

Distributed under the Eclipse Public License version 1.0.
