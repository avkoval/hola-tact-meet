#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+options: num:nil toc:t ^:nil title:nil

* hola-tact-meet

** Purpose

This is my third attempt to develop software that facilitates and structures team meetings in a Holacracy style.
Although my team does not operate under a typical Holacracy framework, I believe there is significant potential in
adopting its principles, especially when it comes to effective facilitation and achieving clear outcomes.

One practical concept from Holacracy is Tactical Meetings, which provide a structured approach to discussing and
addressing ongoing project issues. My goal with this program is to incorporate some of these elements into our team
meetings, allowing us to experiment with Holacracy concepts and use them in current projects.

See also [[https://orgpad.info/o/AZXSvxkUdIo7kZUmIwy7SP][Orgpad: Structural Meetings Idea]]
See also [[./Development.org]]

** Installation
:PROPERTIES:
:CUSTOM_ID: installation
:END:

*** Quick Start with Pre-built JAR

1. Download the latest release from [[https://github.com/avkoval/hola-tact-meet/releases][GitHub Releases]]
   #+begin_example
   wget https://github.com/avkoval/hola-tact-meet/releases/download/v0.0.12/hola-tact-meet-v0.0.12.jar
   #+end_example

2. Install Java 21 (required)
   #+begin_example
   # Ubuntu/Debian
   sudo apt update && sudo apt install openjdk-21-jre

   # macOS with Homebrew
   brew install openjdk@21
   #+end_example

3. Configure Datomic local:

4. Configure ~/.datomic/local.edn


   #+BEGIN_SRC sh :dir ~ :results output replace :exports both
   cat << EOF >  ~/.datomic/local.edn2
   {:storage-dir "$HOME/.local/datomic"}
   EOF
   #+END_SRC

4. Run the application
   #+begin_example
   java -jar hola-tact-meet-v0.0.12.jar
   #+end_example

*** Deployment notes

    1. Reverse proxy should support Http 1.1, and optionally, but recommended to enable Http2/3
       * *Important: proxy_buffering should be disabled!*
    2. here is my [[./resources/examples/nginx.conf][nginx.conf example]]
       

*** Development Setup

Clone and run from source:
#+begin_example
git clone https://github.com/avkoval/hola-tact-meet.git
cd hola-tact-meet
clojure -M:dev
#+end_example

** Configuration

The application uses =resources/config.edn= for configuration with environment variable overrides via [[https://github.com/juxt/aero][Aero]].

*** Required Configuration

**** Secret Key (Required)
#+begin_example
export SECRET_KEY="your-16-char-secret-key-here"
#+end_example

**** Datomic Configuration
#+begin_example
# Database system name (default: dev)
export DATOMIC_SYSTEM=dev

# Database name (default: meetings)
export DATOMIC_DB_NAME=meetings
#+end_example

Setup Datomic Local configuration in =~/.datomic/local.edn=:
#+begin_example
{:storage-dir "/path/to/your/datomic/data"}
#+end_example

*** OAuth2 Configuration (Google Login)

#+begin_example
export OAUTH2_GOOGLE_CLIENT_ID="your-google-client-id"
export OAUTH2_GOOGLE_CLIENT_SECRET="your-google-client-secret"
#+end_example

*** Optional Configuration

**** Server Configuration
#+begin_example
export PORT=8081  # Server port (default: 8081)
#+end_example

**** Logging
#+begin_example
export LOG_LEVEL=INFO  # DEBUG, INFO, WARN, ERROR
#+end_example

**** Monitoring (Sentry)
#+begin_example
export SENTRY_DSN="https://your-sentry-dsn"
export SENTRY_ENVIRONMENT=production
export SENTRY_ENABLED=true
#+end_example

*** Configuration Precedence

1. Environment variables (highest priority)
2. =~/.secrets.edn= file
3. Default values in =config.edn= (lowest priority)

*** Example ~/.secrets.edn

#+begin_example
{:app1/secret-key "your-secret-key-16-chars"
 :app1/google-client-id "your-google-oauth-client-id"
 :app1/google-client-secret "your-google-oauth-secret"
 :app1/sentry-dsn "https://your-sentry-dsn"}
#+end_example

** License

Copyright Â© 2025 Oleksii Koval

Distributed under the MIT License

